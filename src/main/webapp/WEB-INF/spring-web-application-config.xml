<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources location="/resources/" mapping="/resources/**"/>
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 
    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="com.haojii.prototype.tas" />
 
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	  <property name="mediaTypes">
	    <map>
	      <entry key="atom" value="application/atom+xml"/>
	      <entry key="html" value="text/html"/>
	      <entry key="json" value="application/json"/>
	    </map>
	  </property>
	  <property name="viewResolvers">
	    <list>
	      <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
	      <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <property name="prefix" value="/WEB-INF/views/"/>
	        <property name="suffix" value=".jsp"/>
	      </bean>
	    </list>
	  </property>
	  <property name="defaultViews">
	    <list>
	      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
	    </list>
	  </property>
	</bean>

	
</beans>